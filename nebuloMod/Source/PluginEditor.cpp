/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
NebuloModAudioProcessorEditor::NebuloModAudioProcessorEditor (NebuloModAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p)
{
    // Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    setSize (600, 450);
    
    gainSlider.setSliderStyle (Slider::LinearVertical);
    gainSlider.setRange(0.0, 1.0, 0.01);
    gainSlider.setTextBoxStyle (Slider::NoTextBox, false, 90, 0);
    gainSlider.setPopupDisplayEnabled (true, this);
    gainSlider.setTextValueSuffix(" Volume");
    gainSlider.setValue(1.0);
    
    addAndMakeVisible(gainSlider);
    gainSlider.addListener(this);
}

NebuloModAudioProcessorEditor::~NebuloModAudioProcessorEditor()
{
}

//==============================================================================
void NebuloModAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::lightsalmon);

    g.setColour (Colours::black);
    g.setFont (26.0f);
    g.drawFittedText ("Tom and Ryan make DOPE plug-ins! (This one controls gain)", getLocalBounds(), Justification::centred, 1);
}

void NebuloModAudioProcessorEditor::resized()
{
    // This is generally where you'll want to lay out the positions of any
    // subcomponents in your editor..
    
    gainSlider.setBounds(300, 250, 20, 100);
}

void NebuloModAudioProcessorEditor::sliderValueChanged(Slider* slider)
{
    processor.gain = gainSlider.getValue();
}
